@model HD.Station.MediaManagement.Mvc.Features.MediaFile.Models.MediaFileViewModel

@{
    ViewData["Title"] = "Tạo Media File mới";
}

<div class="container">
    <h2>Tạo Media File mới</h2>

    <div class="card">
        <div class="card-header">
            <h4>Upload File mới</h4>
        </div>
        <div class="card-body">
            <form asp-action="Create" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="FileUpload" class="control-label"></label>
                    <div class="custom-file">
                        <input asp-for="FileUpload" type="file" class="custom-file-input" id="customFile" required>
                        <label class="custom-file-label" for="customFile">Chọn file</label>
                    </div>
                    <span asp-validation-for="FileUpload" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="MediaType" class="control-label"></label>
                    <select asp-for="MediaType" class="form-control" asp-items="Html.GetEnumSelectList<HD.Station.MediaManagement.Abstractions.Data.MediaTypeEnum>()">
                        <option value="">-- Chọn loại media --</option>
                    </select>
                    <span asp-validation-for="MediaType" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Format" class="control-label"></label>
                    <select asp-for="Format" class="form-control" asp-items="Html.GetEnumSelectList<HD.Station.MediaManagement.Abstractions.Data.FormatEnum>()">
                        <option value="">-- Chọn định dạng --</option>
                    </select>
                    <span asp-validation-for="Format" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="StoragePath" class="control-label"></label>
                    <input asp-for="StoragePath" class="form-control" placeholder="Đường dẫn sẽ được tự động tạo nếu để trống" />
                    <span asp-validation-for="StoragePath" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="3" placeholder="Nhập mô tả cho file..."></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Status" class="control-label"></label>
                    <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<HD.Station.MediaManagement.Abstractions.Data.StatusEnum>()"></select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Tạo mới" class="btn btn-primary" />
                    <a asp-action="Index" class="btn btn-secondary">Quay lại danh sách</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Display file name when selected
        $(".custom-file-input").on("change", function() {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);

            // Auto-detect media type based on file extension
            var extension = fileName.split('.').pop().toLowerCase();
            var mediaTypeSelect = $("#MediaType");
            var formatSelect = $("#Format");

            // Auto-select media type
            if (['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'].includes(extension)) {
                mediaTypeSelect.val('Image');
            } else if (['mp4', 'avi', 'mov', 'wmv', 'flv', 'webm'].includes(extension)) {
                mediaTypeSelect.val('Video');
            } else if (['mp3', 'wav', 'flac', 'aac', 'ogg'].includes(extension)) {
                mediaTypeSelect.val('Audio');
            } else if (['pdf', 'doc', 'docx', 'txt', 'rtf'].includes(extension)) {
                mediaTypeSelect.val('Document');
            }

            // Auto-select format based on extension
            var formatValue = extension.toUpperCase();
            if (formatSelect.find('option[value="' + formatValue + '"]').length > 0) {
                formatSelect.val(formatValue);
            }
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}